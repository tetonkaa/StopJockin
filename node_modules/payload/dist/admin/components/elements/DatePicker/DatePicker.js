"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const react_datepicker_1 = __importDefault(require("react-datepicker"));
const Calendar_1 = __importDefault(require("../../icons/Calendar"));
const X_1 = __importDefault(require("../../icons/X"));
require("react-datepicker/dist/react-datepicker.css");
require("./index.scss");
const baseClass = 'date-time-picker';
const DateTime = (props) => {
    const { value, onChange, displayFormat, pickerAppearance = 'dayAndTime', minDate, maxDate, monthsToShow = 1, minTime, maxTime, timeIntervals = 30, timeFormat = 'h:mm aa', readOnly, placeholder: placeholderText, } = props;
    let dateTimeFormat = displayFormat;
    if (dateTimeFormat === undefined) {
        if (pickerAppearance === 'dayAndTime')
            dateTimeFormat = 'MMM d, yyy h:mm a';
        else if (pickerAppearance === 'timeOnly')
            dateTimeFormat = 'h:mm a';
        else if (pickerAppearance === 'monthOnly')
            dateTimeFormat = 'MM/yyyy';
        else
            dateTimeFormat = 'MMM d, yyy';
    }
    const dateTimePickerProps = {
        minDate,
        maxDate,
        dateFormat: dateTimeFormat,
        monthsShown: Math.min(2, monthsToShow),
        showTimeSelect: pickerAppearance === 'dayAndTime' || pickerAppearance === 'timeOnly',
        minTime,
        maxTime,
        timeIntervals,
        timeFormat,
        placeholderText,
        disabled: readOnly,
        onChange,
        showPopperArrow: false,
        selected: value && new Date(value),
        customInputRef: 'ref',
        showMonthYearPicker: pickerAppearance === 'monthOnly',
    };
    const classes = [
        baseClass,
        `${baseClass}__appearance--${pickerAppearance}`,
    ].filter(Boolean).join(' ');
    return (react_1.default.createElement("div", { className: classes },
        react_1.default.createElement("div", { className: `${baseClass}__icon-wrap` },
            dateTimePickerProps.selected && (react_1.default.createElement("button", { type: "button", className: `${baseClass}__clear-button`, onClick: () => onChange(null) },
                react_1.default.createElement(X_1.default, null))),
            react_1.default.createElement(Calendar_1.default, null)),
        react_1.default.createElement("div", { className: `${baseClass}__input-wrapper` },
            react_1.default.createElement(react_datepicker_1.default, { ...dateTimePickerProps, onChange: (val) => onChange(val), popperModifiers: {
                    preventOverflow: {
                        enabled: true,
                    },
                } }))));
};
exports.default = DateTime;
//# sourceMappingURL=DatePicker.js.map